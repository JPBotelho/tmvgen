
// MULTIPLE VIDEOS WITH REENCODE:

ffmpeg -loop 1 -framerate 1 
-i "folder.jpg" 
-i  "first.mp3"  
-i "second.mp3" 
-filter_complex 
"[0:v]scale=600:-1[vid];
[1:a][2:a]concat=n=2:v=0:a=1[final]" 
-map [vid]:v 
-map [final]:a 
-t 378 
-r 1 
-movflags +faststart 
"output.mp4"

// MULTIPLE VIDEOS WITHOUT REENCODE:
ffmpeg 
-i folder.jpg 
-f concat -i rem.txt 
-c:v libx264  
-c:a copy output.mp4


// SINGLE VIDEO:

ffmpeg 
-i "first.mp3" 
-filter_complex 
"[0:v]scale=-1:-1[vid]" 
-map [vid]:v 
-map 0:a 
-t 378 
-r 1 // maybe can be removed?
-movflags +faststart 
"output.mp4"



Recursive: Launch it in a directory and it will run itself in subdirectories

Encoding options:
Use album cover as background image (keep original size or rescale)
No text

Don't reencode audio streams (different concat filter)


Settings:

Recursive: Yes/No (-recursive)
Maximum instances (-maxInstances N) (default 8)

Width (-w xxxx)
Height (-h yyyy)

or

-keepsize

Don't generate individual videos -nosingle
Generate folder videos -gendir

Reencode(-reencode)

Output to directory (-output dir/)

Youtube option, frame looping (-lf)
No background, just cover art (-nobg)

------------------------------------------------------------------------------

Run program
Add current directory to DIRECTORIES TO PROCESS
LOOK FOR JOBS

PROCESS DIRECTORY:
 -> IF DIRECTORY HAS AUDIO FILES 
    -> Create jobs for files (unless -nosingle)
    -> Create job for folder (unless -gendir)
 -> Add subdirectories to DIRECTORIES TO PROCESS

while ActiveJobs < maximum Instances:

TRYWORK:
IF JOB QUEUE NON EMPTY:
 -> Start job from queue
IF JOB QUEUE EMPTY:
 -> IF NOT RECURSIVE -> EXIT
 -> IF RECURSIVE -> PROCESS DIRECTORIES

ON JOB-END CALLBACK: (python futures)
GOTO TRYWORK


ffmpeg -loop 1 -framerate 1 -i "folder.jpg" -i  "first.mp3"  -i "second.mp3" -filter_complex "[0:v]scale=600:-1[vid];[1:a][2:a]concat=n=2:v=0:a=1[final]" -map "[final]" -map "[vid]" -t 378 -r 1 -movflags +faststart "output3.mp4"

WORKING FOLDER NO REENCODE:
ffmpeg -i folder.jpg -f concat -i rem.txt -c:v libx264  -c:a copy output.mp4

REENCODE FORCE BIRATE:
ffmpeg -loop 1 -framerate 1 -i "folder.jpg" -i  "first.mp3"  -i "second.mp3" -filter_complex "[1:a][2:a]concat=n=2:v=0:a=1[final];[0:v]scale=600:-1[vid]" -map "[final]" -map "[vid]" -b:a 800k -t 378 -r 1 -movflags +faststart "output3.mp4"

-y automatically overwrites
-n never overwrites
